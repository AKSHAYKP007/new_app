{"version":3,"sources":["logo/img.png","navigation.js","Signin/Signin.js","Register/Register.js","logo.js","imagelinkform/imagelonkform.js","facerecognition/facerecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onroutechange","isSignedIn","style","display","justifyContent","onClick","className","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","data","this","id","htmlFor","onChange","type","name","href","React","Component","Register","Email","Password","onNameChange","Name","user","loaduser","Class","Classname","for","Logo","classname","src","img","align","alt","height","width","hspace","Imagelinkform","onInputChange","onSubmit","Facerecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","input","models","predict","FACE_DETECT_MODEL","route","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6d83203c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img.308080d6.png\";","import React from 'react';\r\n\r\nconst Navigation = ({ onroutechange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onroutechange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onroutechange('Signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n          <p onClick={() => onroutechange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n        </nav>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nclass Signin extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      signInEmail:'',\r\n      signInPassword:''\r\n    }\r\n  }\r\n  onEmailChange=(event)=>{\r\n    this.setState({signInEmail:event.target.value})\r\n  }\r\n  onPasswordChange=(event)=>{\r\n    this.setState({signInPassword:event.target.value})\r\n  }\r\n  onSubmitSignIn =()=>{\r\n    fetch('http://localhost:3000/signin', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email:this.state.signInEmail,\r\n        password:this.state.signInPassword\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data =>{\r\n      if(data === 'success'){\r\n        this.props.onroutechange('home');\r\n      }\r\n    })\r\n  }\r\n  render(){\r\n    const {onroutechange} =this.props;\r\n    return(\r\n    <article className=\"br2 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n  <main className=\"pa4 black-80\">\r\n   <form className=\"measure center\">\r\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n      <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n      <div className=\"mt3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n        <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n      </div>\r\n      <div className=\"mv3\">\r\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n        <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n      </div>\r\n    </fieldset>\r\n    <div className=\"\">\r\n      <input\r\n       onClick={this.onSubmitSignIn}\r\n       className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Signin\"/>\r\n    </div>\r\n    <div className=\"lh-copy mt3\">\r\n      <p onClick={()=>onroutechange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\r\n    </div>\r\n   </form>\r\n  </main>\r\n </article>\r\n);\r\n}\r\n}\r\nexport default Signin;","import React from 'react';\r\nclass Register extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      Email:'',\r\n      Password:'',\r\n      Name:''\r\n    }\r\n  }\r\n  onEmailChange=(event)=>{\r\n    this.setState({Email:event.target.value})\r\n  }\r\n  onPasswordChange=(event)=>{\r\n    this.setState({Password:event.target.value})\r\n  }\r\n  onNameChange=(event)=>{\r\n    this.setState({Name:event.target.value})\r\n  }\r\n  onSubmitSignIn =()=>{\r\n    fetch('http://localhost:3000/register', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email:this.state.Email,\r\n        password:this.state.Password,\r\n        Name:this.state.Name,\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user =>{\r\n      if(user){\r\n        this.props.loaduser(user)\r\n        this.props.onroutechange('home');\r\n      }\r\n    })\r\n  }\r\n render(){\r\n  return(\r\n<article Class=\"br2 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n  <main Class=\"pa4 black-80\">\r\n   <form Classname=\"measure center\">\r\n    <fieldset id=\"sign_up\" Class=\"ba b--transparent ph0 mh0\">\r\n      <legend Class=\"f4 fw6 ph0 mh0\">Register</legend>\r\n       <div Class=\"mt3\">\r\n        <label Class=\"db fw6 lh-copy f6\" for=\"email-address\">Name</label>\r\n        <input onChange={this.onNameChange} Class=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n      </div>\r\n      <div Class=\"mt3\">\r\n        <label Class=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\r\n        <input onChange={this.onEmailChange} Class=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n      </div>\r\n      <div Class=\"mv3\">\r\n        <label Class=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\r\n        <input onChange={this.onPasswordChange} Class=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n      </div>\r\n    </fieldset>\r\n    <div Class=\"\">\r\n      <input\r\n       onClick={this.onSubmitSignIn}\r\n       Class=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\r\n    </div>\r\n   </form>\r\n  </main>\r\n </article>\r\n  );\r\n  }\r\n}\r\nexport default Register;","import React from 'react';\r\nimport img from 'D:/my/new_app/src/logo/img.png';\r\nconst Logo=() =>{\r\n\treturn(\r\n        <div classname='c'>\r\n\t\t  <img src={img} align='left' alt='none' height='10%' width='10%' hspace='5%'/>\r\n\t\t</div>  \r\n    );\r\n}\r\nexport default Logo;","import React from 'react';\r\nconst Imagelinkform=({onInputChange,onSubmit}) =>{\r\n\treturn(\r\n        <div className='main'>\r\n          <p classname='f3'>\r\n           {'this magic brain will detect '}\r\n          </p>\r\n          <div>\r\n            <input classname='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/> \r\n            <button classname='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onSubmit}> detect </button>\r\n          </div>  \r\n        </div> \r\n    );\r\n}\r\nexport default Imagelinkform;","import React from 'react';\r\nimport './facerecognition.css';\r\nconst Facerecognition=({imageUrl,box}) =>{\r\n\treturn(\r\n    <div className='c'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='100px' height='100px'/>\r\n        <div className='bounding_box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Facerecognition;"," import React from 'react';\nimport './App.css';\nimport Navigation from './navigation';\nimport Signin from './Signin/Signin';\nimport Register from './Register/Register';\nimport 'tachyons';\nimport Logo from './logo';\nimport Imagelinkform from './imagelinkform/imagelonkform';\nimport Clarifai from 'clarifai';\nimport Facerecognition from './facerecognition/facerecognition';\nconst app = new Clarifai.App({\n apiKey: 'ea8961082c3a48e88e70eeee9e107f9c'\n});\nclass App extends React.Component{\n\n  constructor(){\n  \tsuper();\n  \tthis.state={\n  \t\tinput:'',\n  \t\timageUrl:'',\n  \t\tbox:{},\n  \t\troute:'Signin',\n      isSignedIn:false,\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        password:'',\n        entries:0,\n        joined: ''\n      }\n  \t}\n  }\n  \n  loaduser =(data) =>{\n    this.setState({user:{\n        id:data.id,\n        name:data.name,\n        email:data.email,\n        entries:data.entries,\n        joined: data.joined\n    }})\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange=(event)=>{\n  \tthis.setState({input: event.target.value});\n  }\n  onSubmit= () =>{\n  \tthis.setState({imageUrl: this.state.input});\n  \tconsole.log('click');\n  \tapp.models\n  \t  .predict(\n  \t     Clarifai.FACE_DETECT_MODEL,\n  \t     this.state.input)\n  \t  .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n   }\n   onroutechange=(route)=>{\n    if(route==='signout'){\n      this.setState({isSignedIn:false});\n    }\n    else if(route === 'home'){\n      this.setState({isSignedIn:true});\n    }\n   \tthis.setState({route:route});\n   }\n render(){\n   return (\n      <div className=\"App\">\n        <Navigation onroutechange={this.onroutechange} isSignedIn={this.isSignedIn}  />\n            {this.state.route ==='home'\n            ?<div>\n              <Imagelinkform onInputChange= {this.onInputChange} onSubmit={this.onSubmit}/>\n              <Logo />\n              <Facerecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n             </div>\n            : (\n            this.state.route ==='Signin'\n              ? <Signin onroutechange={this.onroutechange}/>\n              : <Register loaduser={this.loaduser} onroutechange={this.onroutechange}/>\n              )\n           }   \n    </div> \n    );    \n }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}